body {
  /* margin: 20; */
  padding: 20;
  font-family: Quicksand, Roboto, sans-serif;
  font-weight: 200;
  /* height: 100%; */
  margin:0;
}


h1 {
  font-weight: 300;
  font-size: 2rem;
  color: #3f51b5;
}
h2 {
  font-weight: 300;
  font-size: 1.2rem;
}

h4 {
  font-weight: 400;
}

strong{
  font-weight: 500;
}

html {
  /* height: 600px;
  width: 754px; */
  min-height: 100vh;
  min-width: 100%;
  /* height: 100%; */

  /* background-color: #e7eff9; */
  /* background-image: linear-gradient(315deg, #e7eff9 0%, #cfd6e6 74%); */
  /* background: #ece9e6;
  background: -webkit-linear-gradient(270deg,#ece9e6,#fff);
  background: -webkit-gradient(linear,right top,left top,from(#ece9e6),to(#fff));
  background: -webkit-linear-gradient(right,#ece9e6,#fff);
  background: -o-linear-gradient(right,#ece9e6,#fff);
  background: linear-gradient(270deg,#ece9e6,#fff); */
  /* background: rgb(244, 241, 238) */
  
}


/* REACT-SPINNER */

.react-spinner {
  position: relative;
  width: 32px;
  height: 32px;
  top: 50%;
  left: 50%;
}

.react-spinner_bar {
  -webkit-animation: react-spinner_spin 1.2s linear infinite;
  -moz-animation: react-spinner_spin 1.2s linear infinite;
  animation: react-spinner_spin 1.2s linear infinite;
  border-radius: 5px;
  background-color: rgb(0, 0, 0);
  position: absolute;
  width: 20%;
  height: 7.8%;
  top: -3.9%;
  left: -10%;
}

@keyframes react-spinner_spin {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0.15;
  }
}

@-moz-keyframes react-spinner_spin {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0.15;
  }
}

@-webkit-keyframes react-spinner_spin {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0.15;
  }
}

#root{
  /* border: 4px solid red; */
  max-height: 100%;
  overflow: scroll;
  height: 100%;
}

#mainDrawerContent{
  max-height: 100%;
  /* max-height: -moz-available;          /* WebKit-based browsers will ignore this. 
  max-height: -webkit-fill-available;  /* Mozilla-based browsers will ignore this. 
  max-height: stretch;
  max-height: fill-available; */
}

/* BURGER MENU */

/*!
 * Hamburgers
 * @description Tasty CSS-animated hamburgers
 * @author Jonathan Suh @jonsuh
 * @site https://jonsuh.com/hamburgers
 * @link https://github.com/jonsuh/hamburgers
 */
 .hamburger {
  /* padding: 15px 15px; */
  display: inline-block;
  cursor: pointer;
  transition-property: opacity, filter;
  transition-duration: 0.15s;
  transition-timing-function: linear;
  font: inherit;
  color: inherit;
  text-transform: none;
  background-color: transparent;
  border: 0;
  margin: 0;
  overflow: visible; 
  transform: scale(.6);
}


  .hamburger:hover {
    opacity: 0.7; 
  }

  .hamburger:focus{
    outline: none;
 }


  .hamburger.is-active:hover {
    opacity: 0.7; 
  }
  .hamburger.is-active .hamburger-inner,
  .hamburger.is-active .hamburger-inner::before,
  .hamburger.is-active .hamburger-inner::after {
    background-color: rgb(246,244,244); 
  }


.hamburger-box {
  width: 40px;
  height: 30px;
  display: inline-block;
  position: relative; }

.hamburger-inner {
  display: block;
  top: 50%;
  margin-top: -2px; }
  .hamburger-inner, .hamburger-inner::before, .hamburger-inner::after {
    width: 40px;
    height: 3px;
    background-color: rgb(246,244,244);
    border-radius: 4px;
    position: absolute;
    transition-property: transform;
    transition-duration: 0.15s;
    transition-timing-function: ease; }
  .hamburger-inner::before, .hamburger-inner::after {
    content: "";
    display: block; }
  .hamburger-inner::before {
    top: -10px; }
  .hamburger-inner::after {
    bottom: -10px; }

/*
   * Elastic
   */
.hamburger--elastic .hamburger-inner {
  top: 2px;
  transition-duration: 0.275s;
  transition-timing-function: cubic-bezier(0.68, -0.55, 0.265, 1.55); }
  .hamburger--elastic .hamburger-inner::before {
    top: 10px;
    transition: opacity 0.125s 0.275s ease; }
  .hamburger--elastic .hamburger-inner::after {
    top: 20px;
    transition: transform 0.275s cubic-bezier(0.68, -0.55, 0.265, 1.55); }

.hamburger--elastic.is-active .hamburger-inner {
  transform: translate3d(0, 10px, 0) rotate(135deg);
  transition-delay: 0.075s; }
  .hamburger--elastic.is-active .hamburger-inner::before {
    transition-delay: 0s;
    opacity: 0; }
  .hamburger--elastic.is-active .hamburger-inner::after {
    transform: translate3d(0, -20px, 0) rotate(-270deg);
    transition-delay: 0.075s; }
